name: "Build-Release-Todo-App-$(Build.BuildId)"

trigger:
  branches:
    include:
      - main

pool:
  name: "devops-pool-pss5etgafqg6w"

variables:
  - template: variables.yaml

steps:
  - checkout: self
    clean: true

  - pwsh: |
      dotnet publish -c Release -o $(Build.ArtifactStagingDirectory)/publish
    displayName: "Run dotnet publish"
    workingDirectory: "src/Joonasw.SeriouslySecuringAzurePaas.TodoApp.Web"

  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: "$(Build.ArtifactStagingDirectory)/publish"
      includeRootFolder: false
      archiveType: "zip"
      archiveFile: "$(Build.ArtifactStagingDirectory)/web-$(Build.BuildId).zip"
      replaceExistingArchive: true
    displayName: "Archive files"

  - pwsh: |
      dotnet tool restore
      dotnet ef migrations script -o $(Build.ArtifactStagingDirectory)/migration.sql --idempotent -p Joonasw.SeriouslySecuringAzurePaas.TodoApp.Data -s Joonasw.SeriouslySecuringAzurePaas.TodoApp.Web
    displayName: "Generate EF migration script"
    workingDirectory: "src"
    env:
      ASPNETCORE_ENVIRONMENT: "Production"

  - pwsh: |
      az login --identity --username $(ManagedIdentityObjectId) --allow-no-subscriptions
      $accessToken = az account get-access-token --resource https://database.windows.net --query accessToken -o tsv
      Invoke-SqlCmd -ServerInstance "$(SqlServer)" -Database "$(SqlDatabase)" -AccessToken $accessToken -InputFile "$(Build.ArtifactStagingDirectory)/migration.sql"
    displayName: "Deploy EF migration script"

  - task: AzureWebApp@1
    inputs:
      azureSubscription: "seriously-securing-azure-paas"
      appType: "webApp"
      appName: "$(WebApp)"
      package: "$(Build.ArtifactStagingDirectory)/web-$(Build.BuildId).zip"
      deployToSlotOrASE: true
      deploymentMethod: "runFromPackage"
      slotName: "production"
      resourceGroupName: "$(ResourceGroup)"
    displayName: "Deploy to Azure App Service"
